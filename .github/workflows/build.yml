name: Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{matrix.SHELL}}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              /usr/local/bin/python3 -v -c "import tkinter" &&
              /usr/local/bin/python3 -m PyInstaller -F -w -n rent_manager main.py &&
              cd dist/ &&
              zip -r9 rent_manager rent_manager.app/
            OUT_FILE_NAME: rent_manager.zip
            ASSET_MIME: application/zip
            IS_WINDOWS: false
            PYTHON_EXE: /usr/local/bin/python3
            EXTRA_SETUP: brew install python@3.9 python-tk@3.9 pygobject3 gtk+3
            SHELL: bash
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F -w -n rent_manager main.py
            OUT_FILE_NAME: rent_manager.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
            IS_WINDOWS: true
            PYTHON_EXE: python
            EXTRA_SETUP: ''
            SHELL: msys2 {0}
    steps:
      - uses: actions/checkout@v1
      - name: Set up homebrew
        if: ${{!matrix.IS_WINDOWS}}
        uses: Homebrew/actions/setup-homebrew@master
      - name: Set up msys2
        if: ${{matrix.IS_WINDOWS}}
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >
            mingw-w64-x86_64-gtk3
            mingw-w64-x86_64-python3
            mingw-w64-x86_64-python3-cairo
            mingw-w64-x86_64-python3-gobject
            mingw-w64-x86_64-python3-pip
      - name: Install python and pygobject
        run: ${{matrix.EXTRA_SETUP}}
      - name: Install dependencies
        run: |
          ${{matrix.PYTHON_EXE}} --version
          ${{matrix.PYTHON_EXE}} -m pip install --upgrade pip
          ${{matrix.PYTHON_EXE}} -m pip install -r requirements.txt
      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.get_release_info.outputs.upload_url}}
          asset_path: ./dist/${{matrix.OUT_FILE_NAME}}
          asset_name: ${{matrix.OUT_FILE_NAME}}
          asset_content_type: ${{matrix.ASSET_MIME}}
