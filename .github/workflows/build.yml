name: Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              $(pyenv root)/versions/3.9.7/bin/python -m PyInstaller -F -w -n rent_manager main.py &&
              cd dist/ &&
              zip -r9 rent_manager rent_manager.app/
            OUT_FILE_NAME: rent_manager.zip
            ASSET_MIME: application/zip
            OVERRIDE_PYTHON: true
            PYTHON: $(pyenv root)/versions/3.9.7/bin/python
    steps:
      - uses: actions/checkout@v1
      - name: Set up homebrew
        if: ${{matrix.OVERRIDE_PYTHON}}
        uses: Homebrew/actions/setup-homebrew@master
      - name: Homebrew install python
        if: ${{matrix.OVERRIDE_PYTHON}}
        run: >
          brew install pyenv pygobject3 gtk+3 &&
          eval "$(pyenv init -)" &&
          env SDKROOT=/Applications/Xcode_10.3.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk MACOSX_DEPLOYMENT_TARGET="10.3" PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install 3.9.7 &&
          pyenv global 3.9.7
      - name: Set up Python 3.9
        if: ${{!matrix.OVERRIDE_PYTHON}}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          ${{matrix.PYTHON}} -m pip install --upgrade pip
          ${{matrix.PYTHON}} -m pip install -r requirements.txt
      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}
